services:

  api-gateway:
    container_name: api-gateway
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
    env_file:
      - .env
    ports:
      - 3000:3000
    depends_on:
      - auth-service
      - todo-service
    restart: always
    networks:
      - main

  auth-service:
    container_name: auth-service
    build:
      context: .
      dockerfile: ./apps/auth-service/Dockerfile
    env_file:
      - .env
    ports:
      - 3001:3001
    depends_on:
      - rabbitmq
      - auth-service-db
    restart: always
    networks:
      - main

  todo-service:
    container_name: todo-service
    build:
      context: .
      dockerfile: ./apps/todo-service/Dockerfile
    env_file:
      - .env
    ports:
      - 3002:3002
    depends_on:
      - rabbitmq
      - todo-service-db
    restart: always
    networks:
      - main

  auth-service-db:
    image: postgres:16.4
    container_name: auth-service-db
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: auth-service-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - auth-service-db-data:/var/lib/postgresql/auth-service-db-data
    restart: always
    networks:
      - main

  todo-service-db:
    image: postgres:16.4
    container_name: todo-service-db
    ports:
      - 5433:5432
    environment:
      POSTGRES_DB: todo-service-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - todo-service-db-data:/var/lib/postgresql/todo-service-db-data
    restart: always
    networks:
      - main

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_LOGS: "-w"
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - main  
    volumes: 
      - rabbitmq-data:/var/lib/rabbitmq-data

networks:
  main:

volumes:
  auth-service-db-data:
  todo-service-db-data:
  rabbitmq-data:
